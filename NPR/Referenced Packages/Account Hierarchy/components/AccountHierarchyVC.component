<apex:component allowDML="true" controller="AppShark_AH.AccountHierarchyController" id="comp" access="global">
<apex:stylesheet value="{!URLFOR($Resource.AppShark_AH__Jquery, 'css/liteaccordion.css')}"/>
<apex:includeScript value="{!URLFOR($Resource.AppShark_AH__Jquery, 'js/jquery.min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.AppShark_AH__Jquery, 'js/jquery-ui.js')}" />
<apex:includeScript value="{!URLFOR($Resource.AppShark_AH__Jquery, 'js/jquery.easing.1.3.js')}" />
<apex:includeScript value="{!URLFOR($Resource.AppShark_AH__Jquery, 'js/liteaccordion.jquery.js')}" />
<!--[if lt IE 9]>
            <script>
                document.createElement('figure');
                document.createElement('figcaption');
            </script>
<![endif]-->
<script>var jah$ = jQuery.noConflict();</script>
<style>
    .actcontent{
        padding-top:20px;
    }
    .newgrid{
        background:#FFF;
        border:1px #F0F0F0 solid;
    }
    .newgrid th{
        padding:4px;
        border-bottom: 1px solid #F0F0F0;
        background:none;
        font-weight: normal;
    }
    .newgrid th:first-child{
        border-left:none;
    }
    .newgrid td{
        padding:4px;
        border-bottom:1px #F0F0F0 solid;
        vertical-align: middle;
    }
    .apexp .bPageBlock.apexDefaultPageBlock .pbBody{
        margin:7px 5px !important;
    }
    .accountHeader th{
        padding:4px;
        border:1px #DDD solid;
        background:#f2f3f3;
        border-left:none;
        font-weight: bold;
        font-size: .9em;
    }
    .accountHeader th:first-child{
        border-left:1px #DDD solid;
    }
    .grey_overlay {
      position: absolute;
      top: 0%;
      left: 0%;
      width: 100%;
      height: 100%;
      background-color: black;
      z-index:2;
      -moz-opacity: 0.4;
      opacity:.40;
      filter: alpha(opacity=40);
    }
    .liteAccordion.light{
        background-color: #fff !important;
        box-shadow:0px 0px 0 #ccc, 0px 0px 0 #ccc, 0 1px 15px rgba(0, 0, 0, 0.1) !important;
        border: 2px solid #E9E9E9 !important;
        border-radius: 5px;
    }
    .liteAccordion.light .slide > h2{
    background-color: #fff !important;
    }
    .liteAccordion.light .slide > div{
    background-color: #fff !important;
    }
    .slide h2{
        width:76px !important;
        height:28px !important;
        font-size: 12px !important;
    }
    .hie td{
    font-size:12px !important;
    padding: 1px !important;
    }
    .hie th{
    background:url({!URLFOR($Resource.AppShark_AH__Jquery,'images/headerbg.gif')}) left bottom repeat-x !important;
    /*background: -webkit-linear-gradient(top, #fcfcfc 0%,#D7F2FF 100%) !important;*/
    padding: 5px 0px 4px 5px !important;
    font-size:11px !important;
    font-weight: bold;
    border-left:1px solid #dadada;
    border-top:1px solid #f0f0f0;
    }
    .hie th:first-child{
     border-left: 1px solid #F0F0F0;
     width: 36px;
    }
    .hie th:last-child{
     border-right: 1px solid #F0F0F0;
    }
    /*.newgrid th span{
        top:2px !important;
    }*/
    .hie{
    width:1000px !important;
    }
    .hiediv{
        overflow-x: auto !important;
    }
    .arrow{
        background:url({!URLFOR($Resource.AppShark_AH__Jquery,'images/arrow.png')}) left 3px repeat-x !important;
        border: none;
        width: 16px;
        height: 18px;
        outline:none;
    }
    .arrowblue{
        background:url({!URLFOR($Resource.AppShark_AH__Jquery,'images/arrow-blue.png')}) left 3px repeat-x !important;
        border: none;
        width: 16px;
        height: 18px !important;
        outline:none;
    }
    .edit{
        background:url({!URLFOR($Resource.AppShark_AH__Jquery,'images/edit.png')}) left 4px repeat-x !important;
        border: none;
        width: 16px;
        height: 20px;
        outline:none; 
    }
    .showmore{
        background:url({!URLFOR($Resource.AppShark_AH__Jquery,'images/show_more.png')}) left 4px repeat-x !important;
        border: none;
        width: 16px;
        height: 20px;
        outline:none; 
    }
    .liteAccordion{
    line-height: 21px !important;
    }
    input:hover{
        cursor: pointer;
    }
    li:a{
        text-decoration: none;
    }
    .tooltip{
            display: inline;
            position: relative;
        }
    .tooltip:hover:after{
        background: #333;
        background: rgba(0,0,0,.8);
        border-radius: 5px;
        bottom: 26px;
        color: #fff;
        content: attr(title);
        left: 20%;
        padding: 5px 15px;
        position: absolute;
        z-index: 98;
        width: 220px;
    }
    
    .tooltip:hover:before{
        border: solid;
        border-color: #333 transparent;
        border-width: 6px 6px 0 6px;
        bottom: 20px;
        content: "";
        left: 50%;
        position: absolute;
        z-index: 99;
    }
    .ahscroll{
     max-height: 200px;
     overflow-y: auto;
     overflow-x: hidden;
    }
    .ahscroll::-webkit-scrollbar{
    width:8px;
    background-color:#d2d2d1;
    border-radius: 5px;
    } 
    .ahscroll::-webkit-scrollbar-thumb{
    background-color:#aeaead;
    border-radius:10px;
    }
    .ahscroll::-webkit-scrollbar-thumb:hover{
    background-color:#9c9c9b;
    }
    .ahscroll::-webkit-scrollbar-thumb:active{
    background-color:#80807f;
    } 
    .ahscroll::-webkit-scrollbar-track{
    border-radius:10px;
    } 
</style>
<apex:sectionHeader title="Account Hierarchy " id="SecHeader" />
<apex:outputPanel styleClass="bDescription" id="desc">The hierarchy is created by associating accounts with parent accounts. </apex:outputPanel>
<apex:outputPanel layout="block" styleClass="actcontent" id="outpanel">
   <apex:pageBlock id="pgb">
       <apex:pageMessages />
       <apex:form id="fm">
              <div id="dvLoading" class="grey_overlay" style="z-index:100;" > </div>
               <apex:outputPanel id="AccountHeirarchyPanel" layout="block" >
                    <table border="0" cellpadding="0" cellspacing="0" class="newgrid" width="100%" id="mytable">
                        <thead class="accountHeader"></thead>
                        <tbody></tbody>
                    </table>
                    <div id="responseErrors"></div>
                   <apex:outputpanel id="logopnl" style="width:100%;float:right;text-align:right;margin-top:10px;" rendered="{!logoDisplay}">
                       <apex:image value="{!$Resource.AppShark_AH__AppShark_Logo}" style="width:150px;"/>
                   </apex:outputpanel>
                </apex:outputPanel>
      </apex:form>
  </apex:pageBlock>
</apex:outputPanel>
<script>
   var idParameter = '{!JSENCODE($CurrentPage.parameters.Id)}';
   var cols = eval ( '{!JSENCODE(TEXT(accountcolumns.size))}' ) + 1;
   var childsDataFunction = '{!$RemoteAction.AccountHierarchyController.childsData}';
   var displayAccountsFunction = '{!$RemoteAction.AccountHierarchyController.displayAccounts}';
   function redirecttoAccount(Accid){
       window.top.location.href='/'+Accid+'/e?retURL=%2F'+Accid; 
   }
   
   function redirecttoAccountDetail(Accid){
       window.top.location.href='/'+Accid;
   }
   
   function childsDataDisplay( accountId )
    {
        if ( jah$('#'+accountId+'accounttr').length )
        {
            jah$('#'+accountId+'accounttr').slideToggle('fast');
            jah$( '#'+accountId + 'button').toggleClass( "arrowblue arrow" );
            return false;
        }else
            jah$( '#'+accountId + 'button').toggleClass( "arrow arrowblue" );           
        if ( accountId == undefined )
            accountId ='';
        Visualforce.remoting.Manager.invokeAction(
            childsDataFunction, accountId ,
            function(result, event){
                if (event.status) {
                    // Get DOM IDs for HTML and Visualforce elements like this
                    if ( result.length > 0 )
                        displayRelatedList( accountId, result );
                    else
                    {
                        alert('No records found.');
                        return;
                    }
                } else if (event.type === 'exception') {
                    document.getElementById("responseErrors").innerHTML = event.message + "<br/>\n<pre>" + event.where + "</pre>";
                } else {
                    document.getElementById("responseErrors").innerHTML = event.message;
                }
            }, 
            {escape: true}
        );
    } 
    
    function displayRelatedList( accountId, childresult )
    {
        var body_row = '<tr id="' + accountId + 'accounttr"><td colspan="' + cols + '"><div class="ahscroll" id="' + accountId + 'account" style="width:100%">';
        var column_arr = {};
        <apex:repeat value="{!childcolumns}" id="childcolumns" var="col">
            column_arr[ "{!JSENCODE(col.column)}" ] = { column:"{!JSENCODE(col.column)}", apiname:"{!JSENCODE(col.apiname)}", columntype:"{!JSENCODE(col.columntype)}"};
        </apex:repeat>
        body_row += '<table id="' + accountId + 'table" cellspacing="0" style="width:100%;" class="hie"><thead ></thead><tbody></tbody></table>';
        body_row += '</td></div></tr>';
        jah$("#" + accountId).closest( "tr" ).after( body_row );
        // creating table header
        var jah$thead = jah$('#' + accountId + 'table thead');  
        var row = '<tr><th>Action</th>';
        for ( var col in column_arr)
            row += '<th>' + column_arr[col].column + '</th>';
        row += '</tr>';
        jah$thead.append(row); // adding head to table
        // creating table body
        var jah$body = jah$('#' + accountId + 'table tbody');
        
        var child_body_row = '';
        for(var i = 0; i < childresult.length; i++)
        {
            var childName = childresult[ i ].Name;
            if ( childName != undefined )
                childName = childName.substring( 0,15 );
            var row_obj = childresult[i];
            child_body_row += '<tr id="' + childresult[ i ].Id + '">';
            child_body_row += '<td><input type="button" onclick="editaccount(\'' + childresult[ i ].Id + '\')" class="edit" /></td>';
            for (var key in column_arr)
            {
                if ( typeof ( row_obj[column_arr[key].apiname] ) == "object" )
                {
                    child_body_row += '<th style="text-align: left;">' + row_obj[column_arr[key].apiname].Name + '</th>';
                }else if ( typeof ( row_obj[column_arr[key].apiname] ) == "undefined" )
                    child_body_row += '<td>&nbsp;</td>';
                else if ( key == 'Name' )
                    child_body_row += '<td><a onclick="navigatetoaccount(\'' + childresult[i].Id + '\')" class="actionLink" style="cursor:pointer;text-decoration: underline;color: #015ba7;">' + row_obj[column_arr[key].apiname] + '</a></td>';
                else
                {
                    if ( column_arr[key].columntype == 'CURRENCY' )
                    {
                        var money = new Number(row_obj[column_arr[key].apiname]);
                        child_body_row += '<td>' + money.formatMoney(2, "{!JSENCODE(defaultcurrency)}", ",", ".") + '</td>';
                    }
                    else if ( column_arr[key].columntype == 'DATE' || column_arr[key].columntype == 'DATETIME' )
                    {
                        var date = new Date(row_obj[column_arr[key].apiname]);
                        if ( column_arr[key].columntype == 'DATE' )
                            date.setTime( date.getTime() + ( date.getTimezoneOffset() * 60000 ) );
                        child_body_row += '<td>' + eval( date.getMonth() + 1 ) + '/' + date.getDate()+ '/' +date.getFullYear() + '</td>';
                    }
                    else if ( column_arr[key].columntype == 'BOOLEAN' )
                    {
                        if ( row_obj[column_arr[key].apiname] )
                            child_body_row += '<td><img src="/img/checkbox_checked.gif" alt="Checked" width="21" height="16" class="checkImg" title="Checked"></td>';
                        else
                            child_body_row += '<td><img src="/img/checkbox_unchecked.gif" alt="Not Checked" width="21" height="16" class="checkImg" title="Not Checked"></td>';
                    }
                    else
                        child_body_row += '<td>' + row_obj[column_arr[key].apiname] + '</td>';
                }
            } 
            child_body_row +='</tr>';
        }
        jah$body.append(child_body_row); // adding rows to table 
    }
    
    function accoridian( accountId )
    {
        (function(jah$, d) {
            jah$( '#' + accountId +'account').liteAccordion({
                    onTriggerSlide : function() {
                        this.find('figcaption').fadeOut();
                    },
                    onSlideAnimComplete : function() {
                        this.find('figcaption').fadeIn();
                    },
                    theme : 'light'
            }).find('figcaption:first').show();
        })(jQuery, document);
    }
    /*
    *This is used for navigation to account
    */
    function editaccount( navid ){
        if( navid != '' )
            window.open('/'+navid+'/e?retURL=%2F'+idParameter,'_blank');
        else
            alert('No record found');
    }
    /*
    *This is used for navigation to account
    */
    function navigatetoaccount( navid ){
        if( navid != '' )
            window.open('/'+navid,'_blank');
        else
            alert('No record found');
    }
    // usage: someVar.formatMoney(decimalPlaces, symbol, thousandsSeparator, decimalSeparator)
    // defaults: (2, "$", ",", ".")
    Number.prototype.formatMoney = function(places, symbol, thousand, decimal) {
        places = !isNaN(places = Math.abs(places)) ? places : 2;
        symbol = symbol !== undefined ? symbol : "$";
        thousand = thousand || ",";
        decimal = decimal || ".";
        var number = this,
            negative = number < 0 ? "-" : "",
            i = parseInt(number = Math.abs(+number || 0).toFixed(places), 10) + "",
            j = (j = i.length) > 3 ? j % 3 : 0;
        return symbol + negative + (j ? i.substr(0, j) + thousand : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousand) + (places ? decimal + Math.abs(number - i).toFixed(places).slice(2) : "");
    };
</script>
<script type="text/javascript">
jah$(document).ready(function() {
    Visualforce.remoting.Manager.invokeAction(
        displayAccountsFunction, idParameter,
        function(result, event){
            if (event.status) {
                // Get DOM IDs for HTML and Visualforce elements like this
                displayAccounts ( result, idParameter );
            } else if (event.type === 'exception') {
                document.getElementById("responseErrors").innerHTML = event.message + "<br/>\n<pre>" + event.where + "</pre>";
            } else {
                document.getElementById("responseErrors").innerHTML = event.message;
            }
        }, 
        {escape: true}
    );
    
    function displayAccounts( childresult, currentid )
    {
        var column_arr = {};
        <apex:repeat value="{!accountcolumns}" id="accountcolumns" var="col">
            column_arr[ "{!JSENCODE(col.column)}" ] = { column:"{!JSENCODE(col.column)}", apiname:"{!JSENCODE(col.apiname)}", columntype:"{!JSENCODE(col.columntype)}"};
        </apex:repeat>
        // creating table header
        var jah$thead = jah$('#mytable thead');  
        var row = '<tr><th>Action</th>';
        for ( var col in column_arr)
            row += '<th>' + column_arr[col].column + '</th>';
        row += '</tr>';
        jah$thead.append(row); // adding head to table
        // creating table body
        var jah$body = jah$('#mytable tbody');
        var body_row = '';
        var padding='0';
        for (var i = 0; i < childresult.length; i++) {
            var row_obj = childresult[i].account;
            if ( currentid == childresult[i].account.Id.substring( 0,15 ) ) 
            {   
                body_row += '<tr id="' + childresult[i].account.Id + '" style="background-color: lightgray;"><th><input type="button" onclick="editaccount(\'' + childresult[i].account.Id + '\')" class="edit" />';
                if ( "{!JSENCODE(childobjectname)}" != '' &&  "{!JSENCODE(childobjectname)}" != undefined )
                    body_row += '&nbsp;<span style="position: relative;top:-4px;">|</span>&nbsp;<input type="button" id="' + childresult[i].account.Id + 'button" class="arrow" onclick="childsDataDisplay(\'' + childresult[i].account.Id + '\');" /></th>';
            }
            else
            {
                body_row += '<tr id="' + childresult[i].account.Id + '"><th><input type="button" onclick="editaccount(\'' + childresult[i].account.Id + '\')" class="edit" />';
                if ( "{!JSENCODE(childobjectname)}" != '' &&  "{!JSENCODE(childobjectname)}" != undefined )
                    body_row += '&nbsp;<span style="position: relative;top:-4px;">|</span>&nbsp;<input type="button" id="' + childresult[i].account.Id + 'button" class="arrow" onclick="childsDataDisplay(\'' + childresult[i].account.Id + '\');" /></th>';
            }
            padding = childresult[i].paddingWidth;
            for (var key in column_arr) {
                if ( typeof ( row_obj[column_arr[key].apiname] ) == "object" )
                {
                    body_row += '<th style="text-align: left;">' + row_obj[column_arr[key].apiname].Name + '</th>';
                }else if ( typeof ( row_obj[column_arr[key].apiname] ) == "undefined" )
                    body_row += '<td>&nbsp;</td>';
                else if ( key == 'Name' )
                    body_row += '<th style="padding-left:' + padding + 'px;text-align: left;"><a onclick="navigatetoaccount(\'' + childresult[i].account.Id + '\')" class="actionLink" style="cursor:pointer;text-decoration: underline;color: #015ba7;">' + row_obj[column_arr[key].apiname] + '</a></th>';
                else
                {
                    if ( column_arr[key].columntype == 'CURRENCY' )
                    {
                        var money = new Number(row_obj[column_arr[key].apiname]);
                        body_row += '<td>' + money.formatMoney(2, "{!JSENCODE(defaultcurrency)}", ",", ".") + '</td>';
                    }
                    else if ( column_arr[key].columntype == 'DATE' || column_arr[key].columntype == 'DATETIME' )
                    {
                        var date = new Date(row_obj[column_arr[key].apiname]);
                        if ( column_arr[key].columntype == 'DATE' )
                            date.setTime( date.getTime() + ( date.getTimezoneOffset() * 60000 ) );
                        body_row += '<td>' + eval( date.getMonth() + 1 ) + '/' + date.getDate()+ '/' +date.getFullYear() + '</td>';
                    }
                    else if ( column_arr[key].columntype == 'BOOLEAN' )
                    {
                        if ( row_obj[column_arr[key].apiname] )
                            body_row += '<td><img src="/img/checkbox_checked.gif" alt="Checked" width="21" height="16" class="checkImg" title="Checked"></td>';
                        else
                            body_row += '<td><img src="/img/checkbox_unchecked.gif" alt="Not Checked" width="21" height="16" class="checkImg" title="Not Checked"></td>';
                    }
                    else
                    {
                        /*if ( row_obj[column_arr[key].apiname] != undefined && row_obj[column_arr[key].apiname].indexOf('&lt;img') > -1 )
                        {
                            body_row += '<td>' + row_obj[column_arr[key].apiname] + '</td>';
                        }
                        else*/
                            body_row += '<td>' + htmlDecode(row_obj[column_arr[key].apiname]) + '</td>';
                    }
                }
            }
            body_row += '</tr>';
        }
        jah$body.append(body_row); // adding rows to table
        jah$('#dvLoading').hide();
    }
    
    function htmlDecode( input )
    {
      var e = document.createElement('div');
      e.innerHTML = input;
      return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
    }

}); 
</script>
</apex:component>